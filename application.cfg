/*
 * rtos base-system configuration
 * (c) DIScoVER 2015 
*/

/*
 *  ======== application.cfg ========
 */

/* ================ General configuration ================ */
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Log = xdc.useModule('xdc.runtime.Log');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
//var FatFS = xdc.useModule('ti.sysbios.fatfs.FatFS');

/* ================ System configuration ================ */
var SysMin = xdc.useModule('xdc.runtime.SysMin');
var Mailbox = xdc.useModule('ti.sysbios.knl.Mailbox');
var Event = xdc.useModule('ti.sysbios.knl.Event');
var HeapBuf = xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Timer = xdc.useModule('ti.sysbios.hal.Timer');
var SPI = xdc.useModule('ti.drivers.SPI');
var GPIO = xdc.useModule('ti.drivers.GPIO');
var PWM = xdc.useModule('ti.drivers.PWM');
var LoggingSetup = xdc.useModule('ti.uia.sysbios.LoggingSetup');
System.SupportProxy = SysMin;

/* ================ Kernel configuration ================ */
/* Use Custom library */
var BIOS = xdc.useModule('ti.sysbios.BIOS');
BIOS.libType = BIOS.LibType_Custom;
BIOS.logsEnabled = true;
BIOS.assertsEnabled = true;


/* ================ Driver configuration ================ */
var TIRTOS = xdc.useModule('ti.tirtos.TIRTOS');

TIRTOS.supportsGPIO = false;
TIRTOS.useGPIO = true;

TIRTOS.supportsUART = true;
TIRTOS.useUART = false;

Task.idleTaskStackSize = 512;
BIOS.heapSize = (1024*10*2);/*system heap - used for task stacks for example*/

TIRTOS.useSPI = true;
TIRTOS.usePWM = true;
TIRTOS.libType = TIRTOS.LibType_Instrumented;
LoggingSetup.loggerType = LoggingSetup.LoggerType_STOPMODE;
